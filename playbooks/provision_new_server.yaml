###
# Copyright (2016-2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###
# will get a list of avaiable server hardwares. Select one and obtain infromation about the hardware. Then will check if given profile already exists and stops otherwise. Will obtain given template from the API and customize data for the new profile, such as server hardware type and hostname if given. Then create the profile from the template and assigns to the selected hardware. Checks if created profile was correctly assigned to the selected hardware then powers on the hardare. After server is powered on, obtain the IP that was given to it and add to the ansible inventory. After it waits until the host finishes booting and is online then peform post_provisioning_tasks on the host. In this example there is a test task just to check if the local server can ssh into the new host and then a task that can be parametrized. In this example this task will add the new server to the vcenter and configure a portgroup on the host.
# Input: server_profile_name (string): name of the profile
# Example: ansible-playbook -i hosts playbooks/provision_new_server.yaml --extra-vars '{"server_profile_name":"esx-synergyhost-4"}'
---
- hosts: all
  # These are default vars but can be overwritten by passing different values when running the playbook with -e/--extra-vars options
  vars:
    # Name for the new profile that will be created
    server_profile_name: "esx-synergyhost-04"
    # Name of the template to create the profile from
    profile_template_name: "ESXi-host-profile-template 1.2"
    # Sets the power of the provisioned server on
    ps: "On"
    # NIC used by the Deployment Plan to provision the server. Needed for SSH
    provisioned_nic: "ManagementNIC"
    # Paremeter used by the Deployment Plan to set the Hostname of the server
    hostname_field: "Hostname"
    # File to include for post provisioning tasks
    post_provisioning_tasks: "../config_tasks/add_host_to_vcenter.yaml"
    #Sets the hostname to be given to the server. If not defined, the profile name will be used
    #server_hostname: "myserver1"
  tasks:
    # Obtains the list of server hardware that is avaiable (no profile assigned)
    - include_tasks: ../servers_tasks/hardware_available_list.yaml
    # Selects the first one from the list for the deployment
    - include_tasks: ../servers_tasks/hardware_pick_one_available.yaml
    # Obtains details about the server hardware and saves to an in memore dictionary
    - include_tasks: ../servers_tasks/hardware_find_by_name.yaml
    # From the obtained details of the server, gets the URI for the server hardware type. Later on the profile created will be enforece to use this type even if the template uses a different one.
    - include_tasks: ../servers_tasks/hardware_get_type_uri.yaml
    # Obtains details about the given server profile template. Also checks if the given template exists.
    - include_tasks: ../servers_tasks/template_find_by_name.yaml
    # This will get the os deployment info from the template.
    - include_tasks: ../servers_tasks/template_get_os_custom_attributes.yaml
    # This is to check if the given profile name already exists.
    - include_tasks: ../servers_tasks/profile_find_by_name.yaml
      ignore_errors: yes
    # Enforces server hardware type and hostname if given
    - include_tasks: ../servers_tasks/profile_set_data_before_create.yaml
    # Creates profile and assigne to the server hardware selected from the list of available
    - include_tasks: ../servers_tasks/profile_create_from_template.yaml
    # Verifies that the profile created was successfully attached to the server hardware selected
    - include_tasks: ../servers_tasks/profile_get_hw.yaml
    # Sets hardware name from the one obtained with the created profile
    - include_tasks: ../servers_tasks/hardware_get_name_by_uuid.yaml
    # Checks server hardware state. Should be always off after assigning profile
    - include_tasks: ../servers_tasks/hardware_get_pw.yaml
    # Sets power state on for the server
    - include_tasks: ../servers_tasks/hardware_set_pw.yaml
      when: ps is defined and ps
    # Obtainss the connection info that was associated with the template. Currently assigned IP only.
    - include_tasks: ../servers_tasks/profile_get_connections.yaml
    # Adds the provisioned server to ansible invetory so it can be managed directly. Adds it to a group called new_servers. This hardcoded for now.
    - include_tasks: ../servers_tasks/profile_inventory.yaml
    # Waits until the hosts finishes boot and SSH port starts accepting connections.
    - include_tasks: ../config_tasks/wait_for_host_online.yaml

  #Configures provisioned host with the a test task and post_provisioning_task that can customized.
- hosts: new_servers
  vars:
    post_provisioning_tasks: "../config_tasks/add_host_to_vcenter.yaml"
  tasks:
    - include_tasks: ../config_tasks/host_test.yaml
    - include_tasks: "{{ post_provisioning_tasks }}"
